async function n(n,t=null){n.classList.remove("hidden"),await a("enter",n,t)}async function t(n,t=null){await a("leave",n,t),n.classList.add("hidden")}async function e(e,a=null){e.classList.contains("hidden")?await n(e,a):await t(e,a)}async function a(n,t,e){const a=t.dataset,s=e?`${e}-${n}`:n;let u=`transition${n.charAt(0).toUpperCase()+n.slice(1)}`;const r=a[u]?a[u].split(" "):[s],c=a[`${u}Start`]?a[`${u}Start`].split(" "):[`${s}-start`],d=a[`${u}End`]?a[`${u}End`].split(" "):[`${s}-end`];i(t,r),i(t,c),await new Promise((n=>{requestAnimationFrame((()=>{requestAnimationFrame(n)}))})),o(t,c),i(t,d),await function(n){return new Promise((t=>{const e=getComputedStyle(n).transitionDuration.split(",")[0],a=1e3*Number(e.replace("s",""));setTimeout((()=>{t()}),a)}))}(t),o(t,d),o(t,r)}function i(n,t){n.classList.add(...t)}function o(n,t){n.classList.remove(...t)}export{n as e,t as l,e as t}