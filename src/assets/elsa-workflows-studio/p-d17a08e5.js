const n=new function(){const n=this;return this.listeners={},this.registerListener=function(t,r,e){const o=t.constructor.name;e=this.validateNumber(e||"any"),"Array"!==o&&(t=[t]),t.forEach((function(t){if("String"!==t.constructor.name)throw new Error("Only `String` and array of `String` are accepted for the event names!");n.listeners[t]=n.listeners[t]||[],n.listeners[t].push({callback:r,number:e})}))},this.validateNumber=function(n){const t=n.constructor.name;if("Number"===t)return n;if("String"===t&&"any"===n.toLowerCase())return"any";throw new Error("Only `Number` and `any` are accepted in the number of possible executions!")},this.toBeRemoved=function(n){const t=n.number;return n.execution=n.execution||0,n.execution++,!("any"===t||n.execution<t)},{on(t,r){n.registerListener.bind(n)(t,r,"any")},once(t,r){n.registerListener.bind(n)(t,r,1)},exactly(t,r,e){n.registerListener.bind(n)(r,e,t)},die(t){delete n.listeners[t]},off(n){this.die(n)},detach(t,r){if(void 0===r)return n.listeners[t]=[],!0;for(var e in n.listeners[t])if(n.listeners[t].hasOwnProperty(e)&&n.listeners[t][e].callback===r)return n.listeners[t].splice(e,1),this.detach(t,r);return!0},detachAll(){for(const t in n.listeners)n.listeners.hasOwnProperty(t)&&this.detach(t)},async emit(t,r){const e=[];for(const r in n.listeners)if(n.listeners.hasOwnProperty(r)&&(r===t&&Array.prototype.push.apply(e,n.listeners[r]),r.indexOf("*")>=0)){let o=r.replace(/\*\*/,"([^.]+.?)+");o=o.replace(/\*/g,"[^.]+");const i=t.match(o);i&&t===i[0]&&Array.prototype.push.apply(e,n.listeners[r])}const o=arguments;r=r||this;let i=0;for(const c of e){let e=c.callback;r&&(e=e.bind(r));const s=[];Object.keys(o).map((function(n){n>1&&s.push(o[n])})),n.toBeRemoved(c)&&n.listeners[t].splice(i,1);const a=e.apply(null,s);a&&await a,i++}}}};export{n as e}