import{r as s,h as e}from"./p-d44d1ddb.js";import{S as t}from"./p-25ed19bb.js";import{T as o}from"./p-89475ce8.js";import{g as r}from"./p-0e854430.js";import"./p-83f217d4.js";import"./p-bdae1cb5.js";import"./p-e47f7c7d.js";import"./p-f90ae5bc.js";import"./p-a3b5bd35.js";import"./p-80de33dc.js";import"./p-d17a08e5.js";import"./p-4bdcf3f8.js";const a=class{constructor(e){s(this,e)}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||t.Literal]||void 0,this.items=await r(this.serverUrl,this.propertyDescriptor)}onChange(s){this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||t.Literal]=this.currentValue=s.target.value}onDefaultSyntaxValueChanged(s){this.currentValue=s.detail}render(){const s=this.propertyDescriptor,t=this.propertyModel,o=s.name,r=o,a=o;let i=this.currentValue;const p=this.items;if(null==i){const s=this.propertyDescriptor.defaultValue;i=s?s.toString():void 0}return e("elsa-property-editor",{propertyDescriptor:s,propertyModel:t,onDefaultSyntaxValueChanged:s=>this.onDefaultSyntaxValueChanged(s),"single-line":!0},e("select",{id:r,name:a,onChange:s=>this.onChange(s),class:"elsa-mt-1 elsa-block focus:elsa-ring-blue-500 focus:elsa-border-blue-500 elsa-w-full elsa-shadow-sm sm:elsa-max-w-xs sm:elsa-text-sm elsa-border-gray-300 elsa-rounded-md"},p.map((s=>{const t="object"==typeof s,o=t?s.value:s.toString(),r=t?s.text:s.toString();return e("option",{value:o,selected:o===i},r)}))))}};o.injectProps(a,["serverUrl"]);export{a as elsa_dropdown_property}